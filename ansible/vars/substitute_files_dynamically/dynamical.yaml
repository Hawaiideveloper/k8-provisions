- hosts: k8s-master, k8s-workers
  become: yes
  become_user: root
  become_method: sudo
  gather_facts: yes
  vars_files:
    - ../../vars.yml
  tasks:
    - name: Create containerd config file
      ansible.builtin.file:
        path: "{{ modules_conf_path }}"
        state: "touch"

    - name: Add config for containerd
      blockinfile:
        path: "{{ modules_conf_path }}"
        block: |
              overlay
              br_netfilter

    - name: modprobe
      shell: |
              sudo modprobe overlay
              sudo modprobe br_netfilter

    - name: Set system configs for Kubernetes networking
      file:
        path: "{{ sysctl_conf_path }}"
        state: "touch"

    - name: Add config for containerd
      blockinfile:
        path: "{{ sysctl_conf_path }}"
        block: |
              net.bridge.bridge-nf-call-iptables = 1
              net.ipv4.ip_forward = 1
              net.bridge.bridge-nf-call-ip6tables = 1

    - name: Apply new settings
      command: sudo sysctl --system

    - name: Install containerd
      shell: |
              sudo apt-get update && sudo apt-get install -y containerd
              sudo mkdir -p /etc/containerd
              sudo containerd config default | sudo tee {{ containerd_conf_path }}
              sudo systemctl restart containerd

    - name: Disable swap
      shell: |
              sudo swapoff -a
              sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

    - name: Install and config dependencies
      shell: |
              sudo apt-get update && sudo apt-get install -y apt-transport-https curl
              curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -

    - name: Create kubernetes repo file
      file:
        path: "{{ kubernetes_repo_path }}"
        state: "touch"

    - name: Add K8s source
      blockinfile:
        path: "{{ kubernetes_repo_path }}"
        block: |
              deb https://apt.kubernetes.io/ "{{ apt_kubernetes }}" main

    - name: Install kubernetes
      shell: |
              sudo apt-get update
              sudo apt-get install -y kubelet={{ kubelet_version }} kubeadm={{ kubeadm_version }} kubectl={{ kubectl_version }}
              sudo apt-mark hold kubelet kubeadm kubectl
